{
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 11,
    "project": "tsconfig.json",
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "@angular-eslint/eslint-plugin"],
  "rules": {
    "@angular-eslint/component-class-suffix": "error",
    "@angular-eslint/component-selector": [
      "error",
      {
        "type": ["element", "attribute"],
        "prefix": ["app", "bp"],
        "style": "kebab-case"
      }
    ],
    "@angular-eslint/contextual-lifecycle": "error",
    "@angular-eslint/directive-class-suffix": "error",
    "@angular-eslint/directive-selector": [
      "error",
      {
        "type": "attribute",
        "prefix": ["app", "bp"],
        "style": "camelCase"
      }
    ],
    "@angular-eslint/no-conflicting-lifecycle": "error",
    "@angular-eslint/no-host-metadata-property": "error",
    "@angular-eslint/no-input-rename": "error",
    "@angular-eslint/no-inputs-metadata-property": "error",
    "@angular-eslint/no-output-native": "error",
    "@angular-eslint/no-output-on-prefix": "error",
    "@angular-eslint/no-output-rename": "error",
    "@angular-eslint/no-outputs-metadata-property": "error",
    "@angular-eslint/use-lifecycle-interface": "error",
    "@angular-eslint/use-pipe-transform-interface": "error",

    // TODO: These only work on ts inline templates. figure out if it's possible to lint the html.
    /* "@angular-eslint/template-accessibility-alt-text": "error",
    "@angular-eslint/template-accessibility-elements-content": "error",
    "@angular-eslint/template-accessibility-label-for": "error",
    "@angular-eslint/template-accessibility-tabindex-no-positive": "error",
    "@angular-eslint/template-accessibility-table-scope": "error",
    "@angular-eslint/template-accessibility-valid-aria": "error", */

    "@typescript-eslint/array-type": "off",
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "Object": {
            "message": "Avoid using the `Object` type. Did you mean `object`?"
          },
          "Function": {
            "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
          },
          "Boolean": {
            "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
          },
          "Number": {
            "message": "Avoid using the `Number` type. Did you mean `number`?"
          },
          "String": {
            "message": "Avoid using the `String` type. Did you mean `string`?"
          },
          "Symbol": {
            "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
          }
        }
      }
    ],
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/dot-notation": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/indent": ["error", 2],
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": false
        }
      }
    ],
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unused-expressions": "off",
    "@typescript-eslint/no-use-before-define": "warn",
    "@typescript-eslint/no-var-requires": "warn",
    "@typescript-eslint/prefer-for-of": "warn",
    "@typescript-eslint/semi": ["error", "always"],
    "@typescript-eslint/triple-slash-reference": [
      "error",
      {
        "path": "always",
        "types": "prefer-import",
        "lib": "always"
      }
    ],
    "@typescript-eslint/unified-signatures": "error",
    // The rules below were originally pulled from the google config and
    // rules that conflict with our style guide were overwritten.
    // The rules below are listed in the order they appear on the eslint
    // rules page. All rules are listed to make it easier to keep in sync
    // as new ESLint rules are added.
    // http://eslint.org/docs/rules/
    // - Rules in the `eslint:recommended` ruleset that aren't specifically
    //   mentioned by our style guide are listed but commented out (so
    //   they don't override a base ruleset).
    // - Rules that are recommended but contradict our style guide
    //   are explicitly set to our style guide value.

    // Possible Errors
    // http://eslint.org/docs/rules/#possible-errors
    // ---------------------------------------------
    // "for-direction": "off",
    // "no-await-in-loop": "off",
    // "no-compare-neg-zero": "error", // eslint:recommended
    "no-cond-assign": "error", // eslint:recommended
    // "no-console": "error", // eslint:recommended
    // "no-constant-condition": "error", // eslint:recommended
    // "no-control-regex": "error", // eslint:recommended
    // "no-debugger": "error", // eslint:recommended
    // "no-dupe-args": "error", // eslint:recommended
    // "no-dupe-keys": "error", // eslint:recommended
    // "no-duplicate-case": "error", // eslint:recommended
    // "no-empty": "error", // eslint:recommended
    // "no-empty-character-class": "error", // eslint:recommended
    // "no-ex-assign": "error", // eslint:recommended
    // "no-extra-boolean-cast": "error", // eslint:recommended
    // "no-extra-parens": "off",
    // "no-extra-semi": "error", // eslint:recommended
    // "no-func-assign": "error", // eslint:recommended
    // "no-inner-declarations": "error", // eslint:recommended
    // "no-invalid-regexp": "error", // eslint:recommended
    "no-irregular-whitespace": "error", // eslint:recommended
    // "no-obj-calls": "error", // eslint:recommended
    // "no-prototype-builtins": "off",
    // "no-regex-spaces": "error", // eslint:recommended
    // "no-sparse-arrays": "error", // eslint:recommended
    // "no-template-curly-in-string": "off",
    "no-unexpected-multiline": "error", // eslint:recommended
    // "no-unreachable": "error", // eslint:recommended
    // "no-unsafe-finally": "error", // eslint:recommended
    // "no-unsafe-negation": "off",
    // "use-isnan": "error" // eslint:recommended
    "valid-jsdoc": "off",
    // "valid-typeof": "error" // eslint:recommended

    // Best Practices
    // http://eslint.org/docs/rules/#best-practices
    // --------------------------------------------
    // "accessor-pairs": "off",
    // "array-callback-return": "off",
    // "block-scoped-var": "off",
    // "class-methods-use-this": "off",
    // "complexity": "off",
    // "consistent-return": "off"
    "curly": ["error", "all"],
    // "default-case": "off",
    "dot-location": ["warn", "property"],
    // "dot-notation": "off",
    "eqeqeq": "error",
    "guard-for-in": "error",
    // "no-alert": "off",
    "no-caller": "error",
    // "no-case-declarations": "error", // eslint:recommended
    // "no-div-regex": "off",
    // "no-else-return": "off",
    // "no-empty-function": "off",
    // "no-empty-pattern": "error", // eslint:recommended
    // "no-eq-null": "off",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    // "no-extra-label": "off",
    // "no-fallthrough": "error", // eslint:recommended
    // "no-floating-decimal": "off",
    // "no-global-assign": "off",
    // "no-implicit-coercion": "off",
    // "no-implicit-globals": "off",
    // "no-implied-eval": "off",
    "no-invalid-this": "error",
    // "no-iterator": "off",
    // "no-labels": "off",
    // "no-lone-blocks": "off",
    // "no-loop-func": "off",
    // "no-magic-numbers": "off",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    // "no-new": "off",
    // "no-new-func": "off",
    "no-new-wrappers": "error",
    // "no-octal": "error", // eslint:recommended
    // "no-octal-escape": "off",
    // "no-param-reassign": "off",
    // "no-proto": "off",
    // "no-redeclare": "error", // eslint:recommended
    // "no-restricted-properties": "off",
    // "no-return-assign": "off",
    // "no-script-url": "off",
    // "no-self-assign": "error", // eslint:recommended
    // "no-self-compare": "off",
    // "no-sequences": "off",
    "no-throw-literal": "error", // eslint:recommended
    // "no-unmodified-loop-condition": "off",
    // "no-unused-expressions": "off",
    // "no-unused-labels": "error", // eslint:recommended
    // "no-useless-call": "off",
    // "no-useless-concat": "off",
    // "no-useless-escape": "off",
    // "no-void": "off",
    // "no-warning-comments": "off",
    "no-with": "error",
    "prefer-promise-reject-errors": "error",
    // "radix": "off",
    // "require-await": "off",
    // "vars-on-top": "off",
    // "wrap-iife": "off",
    // "yoda": "off",

    // Strict Mode
    // http://eslint.org/docs/rules/#strict-mode
    // -----------------------------------------
    // "strict": "off",

    // Variables
    // http://eslint.org/docs/rules/#variables
    // ---------------------------------------
    // "init-declarations": "off",
    // "no-catch-shadow": "off",
    // "no-delete-var": "error", // eslint:recommended
    // "no-label-var": "off",
    // "no-restricted-globals": "off",
    // "no-shadow": "off",
    // "no-shadow-restricted-names": "off",
    // "no-undef": "error", // eslint:recommended
    // "no-undef-init": "off",
    // "no-undefined": "off",
    "no-unused-vars": "off", // eslint:recommended // Using @typescript-eslint version instead
    // "no-use-before-define": "off",

    // Node.js and CommonJS
    // http://eslint.org/docs/rules/#nodejs-and-commonjs
    // -------------------------------------------------
    // "callback-return": "off",
    // "global-require": "off",
    // "handle-callback-err": "off",
    // "no-buffer-constructor": "off",
    // "no-mixed-requires": "off",
    // "no-new-require": "off",
    // "no-path-concat": "off",
    // "no-process-env": "off",
    // "no-process-exit": "off",
    // "no-restricted-modules": "off",
    // "no-sync": "off",

    // Stylistic Issues
    // http://eslint.org/docs/rules/#stylistic-issues
    // ----------------------------------------------
    "array-bracket-newline": "off", // eslint:recommended
    "array-bracket-spacing": "error",
    "array-element-newline": "off", // eslint:recommended
    "block-spacing": ["error", "never"],
    "brace-style": "error",
    "camelcase": ["error", { "properties": "always" }],
    // "capitalized-comments": "off",
    "comma-dangle": ["error", "never"],
    "comma-spacing": "error",
    "comma-style": "error",
    "computed-property-spacing": "error",
    // "consistent-this": "off",
    "eol-last": ["error", "never"],
    "func-call-spacing": "error",
    // "func-name-matching": "off",
    // "func-names": "off",
    // "func-style": "off",
    // "id-blacklist": "off",
    // "id-length": "off",
    // "id-match": "off",
    "indent": "off", // Using @typescript-eslint version instead
    // "jsx-quotes": "off",
    "key-spacing": "error",
    "keyword-spacing": "error",
    // "line-comment-position": "off",
    // "linebreak-style": "error",
    // "lines-around-comment": "off",
    // "max-depth": "off",
    "max-len": [
      "error",
      {
        "code": 120,
        "tabWidth": 2,
        "ignoreUrls": true
      }
    ],
    // "max-lines": "off",
    // "max-nested-callbacks": "off",
    // "max-params": "off",
    // "max-statements": "off",
    // "max-statements-per-line": "off",
    "multiline-comment-style": [1, "bare-block"],
    // "multiline-ternary": "off",
    // "new-cap": "error",
    "new-parens": "error",
    // "newline-per-chained-call": "off",
    "no-array-constructor": "error",
    // "no-bitwise": "off",
    // "no-continue": "off",
    // "no-inline-comments": "off",
    // "no-lonely-if": "off",
    // "no-mixed-operators": "off",
    "no-mixed-spaces-and-tabs": "error", // eslint:recommended
    // "no-multi-assign": "off",
    "no-multiple-empty-lines": ["error", { "max": 2 }],
    // "no-negated-condition": "off",
    // "no-nested-ternary": "off",
    "no-new-object": "error",
    // "no-plusplus": "off",
    // "no-restricted-syntax": "off",
    "no-tabs": "error",
    // "no-ternary": "off",
    "no-trailing-spaces": "error",
    // "no-underscore-dangle": "off",
    // "no-unneeded-ternary": "off",
    "no-whitespace-before-property": "error",
    // "nonblock-statement-body-position": "off",
    // "object-curly-newline": "off",
    "object-curly-spacing": ["error", "always"],
    // "object-property-newline": "off",
    "one-var": [
      "error",
      {
        "var": "never",
        "let": "never",
        "const": "never"
      }
    ],
    // "one-var-declaration-per-line": "off",
    // "operator-assignment": "off",
    "operator-linebreak": ["warn", "before"],
    "padded-blocks": [
      "warn",
      { "classes": "always" },
      { "allowSingleLineBlocks": true }
    ],
    // "padding-line-between-statements": "off",
    "quote-props": ["error", "consistent"],
    "quotes": ["error", "single", { "allowTemplateLiterals": true }],
    "require-jsdoc": "off",
    //"semi": "error", Using @typescript-eslint instead
    "semi-spacing": "error",
    "semi-style": [2, "last"],
    // "sort-keys": "off",
    // "sort-vars": "off",
    "space-before-blocks": "error",
    "space-before-function-paren": [
      "error",
      {
        "asyncArrow": "always",
        "anonymous": "never",
        "named": "never"
      }
    ],
    // "space-in-parens": "off",
    "space-infix-ops": "error",
    "space-unary-ops": ["error", {
      "words": true,
      "nonwords": false
    }],
    "spaced-comment": ["warn", "always"],
    "switch-colon-spacing": "error",
    // "template-tag-spacing": "off",
    // "unicode-bom": "off",
    // "wrap-regex": "off",

    // ECMAScript 6
    // http://eslint.org/docs/rules/#ecmascript-6
    // ------------------------------------------
    // "arrow-body-style": "off",
    "arrow-parens": ["warn", "as-needed"],
    // "arrow-spacing": "off",
    "constructor-super": "error", // eslint:recommended
    "generator-star-spacing": ["error", "after"],
    // "no-class-assign": "off",
    "no-confusing-arrow": "warn",
    // "no-const-assign": "off", // eslint:recommended
    // "no-dupe-class-members": "off", // eslint:recommended
    "no-duplicate-imports": "error",
    "no-new-symbol": "error", // eslint:recommended
    // "no-restricted-imports": "off",
    "no-this-before-super": "error", // eslint:recommended
    // "no-useless-computed-key": "off",
    // "no-useless-constructor": "off",
    // "no-useless-rename": "off",
    "no-var": "error",
    // "object-shorthand": "off",
    // "prefer-arrow-callback": "off",
    "prefer-const": ["error", { "destructuring": "all" }],
    // "prefer-destructuring": "off",
    // "prefer-numeric-literals": "off",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    // "prefer-template": "off",
    // "require-yield": "error", // eslint:recommended
    "rest-spread-spacing": "error",
    // "sort-imports": "off",
    // "symbol-description": "off",
    // "template-curly-spacing": "off",
    "yield-star-spacing": ["error", "after"]
  }
}
